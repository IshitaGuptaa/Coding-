QUESTION: 35. Search Insert Position
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You may assume no duplicates in the array.


NOTE:// FOR THE QUESTION THAT EVEN ASKS FOR INSERTION POSITION, AND IF NOT FIND WHERE IT WOULD HAVE BEEN , WE CAN SIMPLY USE BINARY SEARCH , that will do the trick.
  

CODE:

class Solution {
    public int searchInsert(int[] nums, int target) {
        int left=0;
        int right=nums.length-1;
        
        while(left<=right){
            System.out.println(left+","+right);
            int mid = left+(right-left)/2;
            System.out.println("mid: "+mid);
            if(nums[mid]>target){
                right=mid-1;
            }
            else if(nums[mid]<target){
                left=mid+1;
            }
            
            else{
                return mid;
            }            
        }
        
        return left;
    }
}


SUBMISSION:

Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Search Insert Position.
Memory Usage: 39 MB, less than 81.01% of Java online submissions for Search Insert Position.
