QUESTION:202. Happy Number
Write an algorithm to determine if a number n is "happy".
A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.
Return True if n is a happy number, and False if not.

Example: 
Input: 19
Output: true
Explanation: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1



CODE:
class Solution {
    public boolean isHappy(int num1) {
        int count=0;
        while(num1>0 && count<50){
            int sum=0;
            int num2=num1;
            while(num2>0){
                sum+=(num2%10)*(num2%10);
                num2/=10;
            }
            if(sum==1){
                return true;
            }
            num1=sum;
            count++;
        }
        
        return false;
    }
}


SUBMISSION:
Success
Runtime: 1 ms, faster than 93.29% of Java online submissions for Happy Number.
Memory Usage: 36.1 MB, less than 97.51% of Java online submissions for Happy Number.
