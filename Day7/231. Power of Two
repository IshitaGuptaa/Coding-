QUESTION: 231. Power of Two
Given an integer, write a function to determine if it is a power of two.

Example 1:

Input: 1
Output: true 
Explanation: 20 = 1
Example 2:

Input: 16
Output: true
Explanation: 24 = 16
Example 3:

Input: 218
Output: false


CODE:

class Solution {
    public boolean isPowerOfTwo(int n) {
     if(n==0) return false;
    if(n<0) return false;
        while(n>0){
            if(n%2!=0 && n!=1){
                return false;
            }
            n=n/2;
        }
        return true;
        
    
    }
}


SUBMISSION:

Success
Runtime: 1 ms, faster than 100.00% of Java online submissions for Power of Two.
Memory Usage: 36.4 MB, less than 93.64% of Java online submissions for Power of Two.



----ORRRR---


CODE:

long i = 1;
      while(i<n){
          i = i*2;
      }
        return i == n;
        
SUBMISSION:
Success
Runtime: 1 ms, faster than 100.00% of Java online submissions for Power of Two.
Memory Usage: 36.5 MB, less than 87.25% of Java online submissions for Power of Two.


//BOTH OF THEM HAVE ALMOST SIMILAR MEMORY USAGE AND RUNTIME.

NOTE - in the 2nd code we need to use long i ,coz for say max value of n integer, the square will be a long.
