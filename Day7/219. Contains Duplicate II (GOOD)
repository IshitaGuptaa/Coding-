CODE:219. Contains Duplicate II
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false




CODE:

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if(k<=0 || nums.length<2) return false;
        
        int left=0;
        int right=1;
        int len = nums.length;
        while(right<len){
            if(left!=right && nums[left]==nums[right]) return true;
            if((right-left)==k) {left++;}
            else{
                right++;
            }
        }
        while(left<len-1){
            if(nums[left++]==nums[right-1]) return true;
        }       
        return false;
    }
}



SUBMISSION:

Success
Runtime: 1 ms, faster than 98.87% of Java online submissions for Contains Duplicate II.
Memory Usage: 42.3 MB, less than 91.97% of Java online submissions for Contains Duplicate II.
