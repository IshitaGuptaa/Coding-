QUESTION: 154. Find Minimum in Rotated Sorted Array II
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

The array may contain duplicates.

Example 1:

Input: [1,3,5]
Output: 1
Example 2:

Input: [2,2,2,0,1]
Output: 0
Note:

This is a follow up problem to Find Minimum in Rotated Sorted Array.
Would allow duplicates affect the run-time complexity? How and why?

//same as it's medium alternate nooo change in the code.



CODE:

class Solution {
    public int findMin(int[] nums) {
        
        for (int i=0;i<nums.length-1;i++){
            if(nums[i+1]<nums[i])
                return nums[i+1];
        }
        
        return nums[0];
    }
}
    
    
SUBMISSION: 
Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Find Minimum in Rotated Sorted Array II.
Memory Usage: 39.1 MB, less than 87.74% of Java online submissions for Find Minimum in Rotated Sorted Array II.
