QUESTION: 605. Can Place Flowers
Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.

Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number n, return if n new flowers can be planted in it without violating the no-adjacent-flowers rule.

Example 1:
Input: flowerbed = [1,0,0,0,1], n = 1
Output: True
Example 2:
Input: flowerbed = [1,0,0,0,1], n = 2
Output: False
Note:
The input array won't violate no-adjacent-flowers rule.
The input array size is in the range of [1, 20000].
n is a non-negative integer which won't exceed the input array size.




CODE:

class Solution {
    public boolean canPlaceFlowers(int[] A, int n) {
        int n1=A.length;
        if(n==0) return true;
        if(n1==0) return false;
        
        if(n1==1 && A[0]==0) return true;
        else if(n1==1 && A[0]==1) return false;
       
        for(int i=0;i<n1;i++){
            if(A[i]!=1){
            if(i==0 && A[1]!=1){A[0]=1;n--; System.out.println("*2");}
            if(i==n1-1 && A[n1-2]!=1){A[n1-1]=1;n--; System.out.println("*1");}
            if((i>0) && (i<n1-1)){
                if(A[i-1]==0 && A[i+1]==0){
                    A[i]=1;
                    n--;
                }
            }
            if(n==0){return true;}
        }}
        return false;
    }
}


SUBMISSION:
Success
Runtime: 1 ms, faster than 97.08% of Java online submissions for Can Place Flowers.
Memory Usage: 41 MB, less than 73.59% of Java online submissions for Can Place Flowers.
Success
Details 
Runtime: 1 ms, faster than 97.08% of Java online submissions for Can Place Flowers.
Memory Usage: 41 MB, less than 73.59% of Java online submissions for Can Place Flowers.
