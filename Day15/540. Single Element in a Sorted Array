QUESTION: 540. Single Element in a Sorted Array
You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

Follow up: Your solution should run in O(log n) time and O(1) space.
Example 1:

Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:

Input: nums = [3,3,7,7,10,11,11]
Output: 10
 

Constraints:

1 <= nums.length <= 10^5
0 <= nums[i] <= 10^5






CODE:

class Solution {
    public int singleNonDuplicate(int[] nums) {
        int res=nums[0];
        int n=nums.length;
        for(int i=1;i<n;i++){
            res^=nums[i];
        }
        
        return res;
        }
        }
       
       
SUBMISSION: 
Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Single Element in a Sorted Array.
Memory Usage: 39.8 MB, less than 62.08% of Java online submissions for Single Element in a Sorted Array.


---ORR--

CODE:
class Solution {
    public int singleNonDuplicate(int[] nums) {
             
        int n=nums.length;
        if(n==1) return nums[0];
        int count=1;
        for(int i=0;i<n-1;i++){
            if(nums[i]==nums[i+1]){count++;}
            if(nums[i]!=nums[i+1]){if(count!=2) return nums[i];
                                  else{count=1;}}
        }
        return nums[n-1];
    }
}


SUBMISSION:
Success
Runtime: 2 ms, faster than 5.42% of Java online submissions for Single Element in a Sorted Array.
Memory Usage: 43 MB, less than 6.84% of Java online submissions for Single Element in a Sorted Array.
