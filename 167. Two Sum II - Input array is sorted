QUESTION: 167. Two Sum II - Input array is sorted
Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.
Note:
Your returned answers (both index1 and index2) are not zero-based.
You may assume that each input would have exactly one solution and you may not use the same element twice.


CODE:
class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int pointer_a=0;
        int pointer_b=numbers.length-1;
        
        while(pointer_a <=pointer_b){
            int sum=numbers[pointer_a]+numbers[pointer_b];
            if(sum>target){
            pointer_b--;
        }
            else if (sum<target){
                pointer_a++;
            }
            else{
                break;
                
            }
        }
        return new int[] {pointer_a+1,pointer_b+1};
    }
}


SUBMISSION:
Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Two Sum II - Input array is sorted.
Memory Usage: 39.7 MB, less than 15.62% of Java online submissions for Two Sum II - Input array is sorted.


TIP: for sorted arrays it is always a good idea to use pointers.
