QUESTION: 64. Minimum Path Sum
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.







CODE:

class Solution {
    public int minPathSum(int[][] grid) {
        int row=grid.length;
        int col=grid[0].length;
        int[][] dp= new int[row][col];
       
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                dp[i][j]=grid[i][j];
                if(i>0 && j>0){
                dp[i][j]+=Math.min(dp[i][j-1],dp[i-1][j]);}
                else if(i>0){
                    dp[i][j]+=dp[i-1][j];
                }
                else if(j>0){
                    dp[i][j]+=dp[i][j-1];
                }
            }
        }
        return dp[row-1][col-1];
    }
}



SUBMISSION:

Success
Runtime: 2 ms, faster than 86.33% of Java online submissions for Minimum Path Sum.
Memory Usage: 41.5 MB, less than 98.58% of Java online submissions for Minimum Path Sum.
