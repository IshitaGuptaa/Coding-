QUESTION: 406. Queue Reconstruction by Height
Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

 
Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]





CODE:


class Solution {
   public int[][] reconstructQueue(int[][] people){
    Arrays.sort(people, new Comparator<int[]>(){
        public int compare(int[] o1, int[] o2) {
            return o1[0]==o2[0]? o1[1]-o2[1]:o2[0]-o1[0];
        }
    });
    List<int[]> list = new ArrayList<>();
    for (int[] p:people) {
        list.add(p[1],p);
    }
    return list.toArray(new int[list.size()][]);
}
}



SUBMISSION:
Success
Runtime: 9 ms, faster than 55.88% of Java online submissions for Queue Reconstruction by Height.
Memory Usage: 52.8 MB, less than 12.49% of Java online submissions for Queue Reconstruction by Height.
