QUESTION:
Given a positive integer num, output its complement number. The complement strategy is to flip the bits of its binary representation.

 

Example 1:

Input: num = 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
Example 2:

Input: num = 1
Output: 0
Explanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.



CODE:

class Solution {
    public int findComplement(int num) {
        int n=0;
        while(Math.pow(2,n)<=num){
            n++;
        }

        return num^(int)(Math.pow(2,n)-1);
    }
}


SUBMISSION:
Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Number Complement.
Memory Usage: 36.6 MB, less than 52.91% of Java online submissions for Number Complement.
