QUESTION: 118. Pascal's Triangle
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.

CODE: 
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> Pascal = new ArrayList<>();
        
        List<Integer> firstRow = new ArrayList<>();
        if(numRows>0){
            firstRow.add(1);
            Pascal.add(firstRow);
        
            for(int i=1;i<numRows;i++){
                List<Integer> row = new ArrayList<>();
                row.add(1);
            
                for(int j=1;j<i;j++){
                row.add((Pascal.get(i-1).get(j-1))+ Pascal.get(i-1).get(j));
                }
            
                row.add(1);
            
                Pascal.add(row);
            }
        }
        return Pascal;
    }
}



SOLUTION: 

Runtime: 0 ms, faster than 100.00% of Java online submissions for Pascal's Triangle.
Memory Usage: 37.4 MB, less than 10.43% of Java online submissions for Pascal's Triangle.
