CODE:

import java.util.*;
import java.io.*;

class Graph {

	int V;
	LinkedList<Integer> A[];
	
	Graph(int v){

		V=v;
		A = new LinkedList[V];
		for(int i=0;i<V;i++){
			A[i]=new LinkedList();
		}
	}
	
	
	void addEdge(int u,int v){
		A[u].add(v);
	}
	
	void DFS(){
		
		boolean bool[] = new boolean[V];
		int count=0;
		for(int i=0;i<V;i++){
			if(!bool[i]) count++;
			dfsutil(bool,i);
		}
		
		System.out.println(count);
	}
		
		
	void dfsutil(boolean[] bool,int i){
		
		bool[i]=true;
		//System.out.println(i);
		Iterator<Integer> itr= A[i].listIterator();
		while(itr.hasNext()){
			int n= itr.next();
			if(!bool[n]){
				dfsutil(bool,n);
			}
			
		}
		
	}
	
public static void main(String args[]) 
    { 
        
        Graph g = new Graph(5);  
  
        g.addEdge(0, 1);  
        g.addEdge(0, 2);  
        g.addEdge(3, 4);  
  
        System.out.println("Following is Depth First Traversal "+ 
                           "(starting from vertex 2)"); 
  
        g.DFS(); 
    } 




}

