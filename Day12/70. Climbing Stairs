QUESTION: 70. Climbing Stairs
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:

Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step


CODE:

class Solution {
    public int climbStairs(int n) {
        int[] arr = new int[n+1];
        
        arr[0]=1;
        arr[1]=1;
     
        for(int i=0;i<=(n-2);i++){
            arr[i+2]=arr[i]+arr[i+1];
        }
        return arr[n];
    }
}



SUBMISSIONS:

Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Climbing Stairs.
Memory Usage: 37.8 MB, less than 37.61% of Java online submissions for Climbing Stairs.
