QUESTION:220. Contains Duplicate III
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false





CODE:

class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        
        int left=0;
        int n=nums.length;
        
        if(k==0) return false;
        
        for(int right=1;right<n;right++){
            long a=Math.abs(Long.valueOf(nums[right])-Long.valueOf(nums[left]));
            if(a<=t){ return true;}
            if(a>Integer.MAX_VALUE) {return false;}
            if(right-left==k){
                right=++left;
            }
            
            if(right==n-1){
                right=++left;
            }
        }
        
        return false;
    }
}


SUBMISSION:
Time Limit Exceeded
