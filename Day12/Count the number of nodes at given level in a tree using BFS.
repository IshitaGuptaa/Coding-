CODE:


import java.util.*;
import java.io.*;

class Graph{
	int V;
	LinkedList<Integer> A[] ;
	Graph(int v){
		V=v;
		A=new LinkedList[v];
		for(int i=0;i<v;i++){
			A[i]=new LinkedList();
		}
	}
	
	void addEdge(int u,int v){
		A[u].add(v);
	}
	
	
	int dfs(int k){
		boolean bool[] = new boolean[V];
		int level[] = new int[V];
		return dfsutil(bool,k,level);
	}
	
	int dfsutil( boolean[] bool,int k,int[] level){
		int count=0;
		LinkedList<Integer> queue = new LinkedList();
		queue.add(0);
		
		while(queue.size()!=0){
			int a=queue.poll();
			bool[a]=true;
			Iterator<Integer> itr = A[a].listIterator();
			
			while(itr.hasNext()){
				int n = itr.next();
				if(!bool[n]){
				level[n]=level[a]+1;
				queue.add(n);
				if(level[n]==k){count++;}
			}}
			
		}
		return count;
	}
	
	
	public static void main(String args[]) 
    { 
        Graph g = new Graph(6); 
  
        g.addEdge(0, 1); 
        g.addEdge(0, 2); 
        g.addEdge(1, 3); 
        g.addEdge(2, 4); 
        g.addEdge(2, 5); 
      
  
        System.out.println("Following is Breadth First Traversal "+ 
                           "(starting from vertex 2)"); 
  
        System.out.println(g.dfs(2)); 
    } 
}
