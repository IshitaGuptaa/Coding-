QUESTION: 51. N-Queens
The n-queens puzzle is the problem of placing n queens on an n√ón chessboard such that no two queens attack each other.
Given an integer n, return all distinct solutions to the n-queens puzzle.

Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.

Example:

Input: 4
Output: [
 [".Q..",  // Solution 1
  "...Q",
  "Q...",
  "..Q."],

 ["..Q.",  // Solution 2
  "Q...",
  "...Q",
  ".Q.."]
]
Explanation: There exist two distinct solutions to the 4-queens puzzle as shown above.












CODE:


class Solution {
    public List<List<String>> solveNQueens(int n) {
        char[][] A = new char[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                A[i][j]='.';
            }
        }
        List<List<String>> res = new LinkedList();
        func(A,0,res);
        return res;
    }
    
    
    public void func(char[][] A, int col,List<List<String>> res){
        
        if(col==A.length){
            List<String> curr = new LinkedList();
            for(int i=0;i<A.length;i++){
                curr.add(new String(A[i]));
            }
             res.add(curr);
        }
        
        
        for(int i=0;i<A.length;i++){
            if(isSafe(A,i,col)){
                A[i][col]='Q';
                func(A,col+1,res);
                A[i][col]='.';
            }
        }
        
      return; 
    } 
    
    
    
    public boolean isSafe(char[][] A , int row, int col){   
        int i,j;
            for(j=0;j<col;j++){
                if(A[row][j]=='Q'){
                    return false;
                }
            }
        
        
            for(j=col,i=row;j>=0 && i>=0; j--,i--){
                if(A[i][j]=='Q'){
                    return false;
                }
            }
        
             for(j=col,i=row;j>=0 && i<A.length; j--,i++ ){
                if(A[i][j]=='Q'){
                    return false;
                }
            }
        return true;
    }
}



SUBMISSION:

Success
Runtime: 2 ms, faster than 96.67% of Java online submissions for N-Queens.
Memory Usage: 39.9 MB, less than 68.11% of Java online submissions for N-Queens.
