QUESTION:62. Unique Paths
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

 


CODE:
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] A = new int[m][n];
      for(int i=0;i<m;i++){
          A[i][0]=1;
      }
        for(int i=0;i<n;i++){
          A[0][i]=1;
      }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                A[i][j]=A[i-1][j]+A[i][j-1];
            }
        }
        return A[m-1][n-1];
    }
}

SUBMISSION:

Success
Runtime: 0 ms, faster than 100.00% of Java online submissions for Unique Paths.
Memory Usage: 36.6 MB, less than 30.95% of Java online submissions for Unique Paths.
