QUESTION: 560. Subarray Sum Equals K
Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:

Input:nums = [1,1,1], k = 2
Output: 2
 

Constraints:

The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].





CODE:

public class Solution {
    public int subarraySum(int[] nums, int k) {
       
        HashMap<Integer,Integer> A = new HashMap();
        int n=nums.length;
        int sum=0;
        int count=0;
        A.put(0,1);
        for(int i=0;i<n;i++){
            sum+=nums[i];
            if(A.containsKey(sum-k)){
                count+=A.get(sum-k);
            }
            A.put(sum,A.getOrDefault(sum,0)+1);
        }
        return count;
    }
}



SUBMISSION:

Success
Runtime: 13 ms, faster than 91.50% of Java online submissions for Subarray Sum Equals K.
Memory Usage: 40.7 MB, less than 56.20% of Java online submissions for Subarray Sum Equals K.
