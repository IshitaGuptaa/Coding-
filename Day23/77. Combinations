QUESTION: 77. Combinations
77. Combinations
Medium

1618

68

Add to List

Share
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

You may return the answer in any order.

 

Example 1:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
Example 2:

Input: n = 1, k = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20
1 <= k <= n






CODE:
class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new LinkedList();
        List<Integer> curr = new ArrayList();
        func(res,curr,n,k,1);
            return res;
    }
    
    public void func(List<List<Integer>> res,List<Integer> curr,int n,int k,int i){
        
        if(curr.size()==k){
            res.add(new ArrayList(curr));
        }
        
        else if(curr.size()>k){
            return ;
        }
    
        for(;i<n+1;i++){
            curr.add(i);
            func(res,curr,n,k,i+1);
            curr.remove(curr.size()-1);
        
        }
        return ;
        
    }
}







SUBMISSION:

Success
Runtime: 24 ms, faster than 46.54% of Java online submissions for Combinations.
Memory Usage: 41.2 MB, less than 51.70% of Java online submissions for Combinations.
