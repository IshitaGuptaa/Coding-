QUESTIONS: 503. Next Greater Element II
Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.

Example 1:
Input: [1,2,1]
Output: [2,-1,2]
Explanation: The first 1's next greater number is 2; 
The number 2 can't find next greater number; 
The second 1's next greater number needs to search circularly, which is also 2.
Note: The length of given array won't exceed 10000.






CODE:

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n=nums.length;
        int out[] = new int[n];
        for(int i=0;i<n;i++){
            boolean flag=false;
            int j=i+1;
            if(i==n-1){
                j=0;
            }
            for(j=j;j<n;j++){
                if(i==j) break;
                if(nums[j]>nums[i]){
                    out[i]=nums[j];
                    flag=true;
                    break;
                }
                 if(j==n-1){j=-1;}
            }
            
            if(!flag){
                out[i]=-1;
            }
        }
     return out;   
    }
}



SUBISSION:
Success
Runtime: 52 ms, faster than 10.66% of Java online submissions for Next Greater Element II.
Memory Usage: 40.4 MB, less than 91.53% of Java online submissions for Next Greater Element II.
